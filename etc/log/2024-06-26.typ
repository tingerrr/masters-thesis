= QnA
- draft review
- work done as of yet
  - parts of last review incorporated
  - a rough explanation of why finger trees were chosen over the other cited persistent data strutures
  - introduction of 2-3-finger trees as the primary contender for t4gl-arrays
  - introduction to generic finger trees
  - analysis of generic finger tree
    - compare different branching factors is good for analysis
    - data type definition should be changed to C++ since this is the primary language used for eamples the the later impl
  - a rough outline of why the amortized bounds should hold for the generic version, yet to be proven using amortized analysis
- work to be done
  - insert and remove in terms of split + push/pop + concat
    - this is possible and within bounds, but may be a typical case of not caring about constant factors enough and can likely be done more efficiently by implementing it directly
  - might be hard to specialize since the original impl is inherently functional
  - realtime analysis
    - while we can't ensure constant bounds for push/pop in finger trees as they are defined now, we still get the b-tree worst case complexities of $Theta(log n)$
    - needs an introduction of t4gl's execution model
